#include <stdbool.h>
int	get_unum()
{
	int input = 0;
	fflush(1);
	scanf("%d", &input);
	clear_stdin();
	return input;
}

int	store_number(int *param_1)

{
	unsigned int uVar1;
	unsigned int uVar2;
	int uVar3;

	printf(" Number: ");
	uVar1 = get_unum();
	printf(" Index: ");
	uVar2 = get_unum();
	if ((uVar2 % 3 == 0) || (uVar1 >> 24 == 183))
	{
		puts(" *** ERROR! ***");
		puts("   This index is reserved for wil!");
		puts(" *** ERROR! ***");
		uVar3 = 1;
	}
	else
	{
		*(unsigned int *)(uVar2 * 4 + param_1) = uVar1;
		uVar3 = 0;
	}
	return uVar3;
}

int	read_number(int	*data)
{
	printf(" Index: ");
	int index = get_unum();
	printf(" Number at data[%u] is %u\n", index, data[index]);
	return 0;
}

int	main(int argc, char** argv, char** envp)
{
	int		data[100];
	char	str[20];
	int		ret;

	puts("----------------------------------------------------");
	puts("  Welcome to wil's crappy number storage service!");
	puts("----------------------------------------------------");
	puts("Commandds:");
	puts("    store - store a number into the data storage");
	puts("    read  - read a number from the data storage");
	puts("    quit  - exit the program  ");
	puts("----------------------------------------------------");
	puts("   wil has reserved some storage :>");
	puts("----------------------------------------------------");
	while (1)
	{
		printf("Input command: ");
		ret = 1;
		fgets(str, 20, 0);
		if (str == "store")
			ret = store_number(&data);
		else if (str == "read")
		{
				read_number(&data);
				ret = 0;
		}
		else if (str == "quit")
			break;
		if (ret == 0)
			printf(" Completed %s command successfulâ€¦", str);
		else
			printf(" Failed to do %s command\n", str);
		memset(str, 0, 20);
	}
}
