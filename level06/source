bool	auth(char *s, int serial_value)
{
	int i;
	int s_encoded;
	int len;

	s[strcspn(s, "\n")] = 0;
	len = strnlen(s, 32);
	if ( len <= 5 )
		return 1;
	if ( ptrace(PTRACE_TRACEME, 0, 1, 0) == -1 )
	{
		puts("\x1B[32m.---------------------------.");
		puts("\x1B[31m| !! TAMPERING DETECTED !!  |");
		puts("\x1B[32m'---------------------------'");
		return 1;
	}
	else
	{
		s_encoded = (s[3] ^ 4919) + 6221293;
		for ( i = 0; i < len; ++i )
		{
			if ( s[i] <= 31 )
				return 1;
			s_encoded += (s_encoded ^ (unsigned int)s[i]) % 1337;
		}
	}
	return serial_value != s_encoded;
}



int main(int argc, const char **argv, const char **envp)
{
	int serial_value;
	char s[28];
	unsigned int v6;

	v6 = __readgsdword(0x14u);
	puts("***********************************");
	puts("*\t\tlevel06\t\t  *");
	puts("***********************************");
	printf("-> Enter Login: ");
	fgets(s, 32, 0);
	puts("***********************************");
	puts("***** NEW ACCOUNT DETECTED ********");
	puts("***********************************");
	printf("-> Enter Serial: ");
	scanf("%d", &serial_value);
	if (auth(s, serial_value))
		return 1;
	puts("Authenticated!");
	system("/bin/sh");
	return 0;
}
