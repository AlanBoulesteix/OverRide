int decrypt(char c)
{
	int i;
	int len;
	char password[29];

	strcpy(password, "Q}|u`sfg~sf{}|a3");
	len = strlen(password);
	for ( i = 0; i < len; ++i )
		password[i] ^= c; // Operator XOR
	if ( !strcmp(password, "Congratulations!") )
		return system("/bin/sh");
	else
		return puts("\nInvalid Password");
}

int test(int nb1, int nb2)
{
	int result;
	char random_char;

	switch ( nb2 - nb1 )
	{
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
			result = decrypt(nb2 - nb1);
			break;
		default:
			random_char = rand();
			result = decrypt(random_char);
			break;
	}
	return result;
}

int main(int argc, const char **argv, const char **envp)
{
	int				time_started;
	int				input;

	time_started = time(0);
	srand(time_started);
	puts("***********************************");
	puts("*\t\tlevel03\t\t**");
	puts("***********************************");
	printf("Password:");
	scanf("%d", &input);
	test(input, 322424845);
	return 0;
}
